// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as ReactDom from "react-dom";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function useReducer(prim0, prim1) {
  return React.useReducer(Curry.__2(prim0), prim1);
}

function string(prim) {
  return prim;
}

function render(prim0, prim1) {
  ReactDom.render(prim0, prim1);
  
}

function querySelector(prim) {
  return Caml_option.nullable_to_opt(document.querySelector(prim));
}

var initialState = {
  count: 0
};

function reducer(state, action) {
  if (action === "Decrement") {
    return {
            count: state.count - 1 | 0
          };
  } else {
    return {
            count: state.count + 1 | 0
          };
  }
}

function Target(Props) {
  var state = Props.state;
  var match = React.useReducer(reducer, initialState);
  var dispatchLocal = match[1];
  return React.createElement("main", undefined, React.createElement("div", {
                  className: "Controls"
                }, React.createElement("header", {
                      className: "Controls-header"
                    }, React.createElement("div", undefined, React.createElement("button", {
                              onClick: (function (param) {
                                  return dispatchLocal("Decrement");
                                })
                            }, "Decrement"), React.createElement("span", {
                              className: "counter"
                            }, String(state.data.counter + match[0].count | 0)), React.createElement("button", {
                              onClick: (function (param) {
                                  return dispatchLocal("Increment");
                                })
                            }, "Increment")))));
}

var make = Target;

export {
  useReducer ,
  string ,
  render ,
  querySelector ,
  initialState ,
  reducer ,
  make ,
  
}
/* react Not a pure module */
